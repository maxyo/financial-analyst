{
  "openapi": "3.0.0",
  "paths": {
    "/api/health": {
      "get": {
        "operationId": "HealthController_getHealth",
        "summary": "Health check",
        "description": "Returns service health status and current timestamp.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Health"
        ]
      }
    },
    "/api/documents": {
      "get": {
        "operationId": "DocumentsController_list",
        "summary": "List documents",
        "description": "Returns a paginated list of documents with filters (title, free-text q, scraperId, dateFrom/dateTo). Ordered by scrapedAt DESC.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          },
          {
            "name": "title",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "scraperId",
            "required": false,
            "in": "query",
            "schema": {
              "format": "uuid",
              "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
              "type": "string"
            }
          },
          {
            "name": "dateFrom",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "dateTo",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentsListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ]
      },
      "post": {
        "operationId": "DocumentsController_create",
        "summary": "Create document",
        "description": "Create a new document. Content is normalized to string; contentHash is auto-computed if not provided.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentCreateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ]
      }
    },
    "/api/documents/{id}": {
      "get": {
        "operationId": "DocumentsController_getOne",
        "summary": "Get document by ID",
        "description": "Fetch a single document by its UUID and include its scraper display info.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ]
      },
      "patch": {
        "operationId": "DocumentsController_update",
        "summary": "Update document",
        "description": "Partially update document fields by UUID. Recomputes contentHash when content changes.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentUpdateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ]
      },
      "delete": {
        "operationId": "DocumentsController_remove",
        "summary": "Delete document",
        "description": "Delete a document by UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Documents"
        ]
      }
    },
    "/api/scrapers": {
      "get": {
        "operationId": "ScrapersController_list",
        "summary": "List scrapers",
        "description": "Returns a paginated list of configured scrapers ordered by name.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Количество элементов на странице",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Смещение для пагинации",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScrapersListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      },
      "post": {
        "operationId": "ScrapersController_create",
        "summary": "Create scraper",
        "description": "Create a new scraper of type HTML or API with configuration and optional post-processors.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScraperCreateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScraperDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      }
    },
    "/api/scrapers/{id}": {
      "get": {
        "operationId": "ScrapersController_getOne",
        "summary": "Get scraper by ID",
        "description": "Fetch a single scraper by its UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScraperDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      },
      "patch": {
        "operationId": "ScrapersController_update",
        "summary": "Update scraper",
        "description": "Partially update scraper fields by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScraperUpdateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScraperDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      },
      "delete": {
        "operationId": "ScrapersController_remove",
        "summary": "Delete scraper",
        "description": "Delete a scraper by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      }
    },
    "/api/scrapers/{id}/run": {
      "post": {
        "operationId": "ScrapersController_run",
        "summary": "Run scraper",
        "description": "Enqueue a background job to run the scraper. Requires Redis to be configured.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScraperRunResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Scrapers"
        ]
      }
    },
    "/api/collections": {
      "get": {
        "operationId": "CollectionController_list",
        "summary": "List collections",
        "description": "Returns a paginated list of collections, optionally filtered by name (q). Ordered by created_at DESC.",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      },
      "post": {
        "operationId": "CollectionController_create",
        "summary": "Create collection",
        "description": "Create a new collection with name, optional description, and optional filter definition.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Function"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      }
    },
    "/api/collections/{id}": {
      "get": {
        "operationId": "CollectionController_getOne",
        "summary": "Get collection by ID",
        "description": "Fetch a single collection by its UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      },
      "patch": {
        "operationId": "CollectionController_update",
        "summary": "Update collection",
        "description": "Partially update a collection by UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Function"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      },
      "delete": {
        "operationId": "CollectionController_remove",
        "summary": "Delete collection",
        "description": "Delete a collection by UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      }
    },
    "/api/collections/{id}/documents": {
      "get": {
        "operationId": "CollectionController_documents",
        "summary": "List documents in collection",
        "description": "Returns documents that match the collection filters with pagination (ordered by scraped_at DESC).",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AugmentedZodDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Collections"
        ]
      }
    },
    "/api/profiles": {
      "get": {
        "operationId": "ProfileController_list",
        "summary": "List profiles",
        "description": "Returns a paginated list of analysis profiles. Sorted by id DESC. Query params: limit, offset.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Page size (default 50, up to 200)",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset/start index (default 0)",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          },
          {
            "name": "topicId",
            "required": true,
            "in": "query",
            "description": "Topic ID (Required)",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfilesListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "post": {
        "operationId": "ProfileController_create",
        "summary": "Create profile",
        "description": "Creates a new analysis profile.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/profiles/{id}": {
      "get": {
        "operationId": "ProfileController_getOne",
        "summary": "Get profile",
        "description": "Returns a profile by numeric identifier.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Profile by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "patch": {
        "operationId": "ProfileController_update",
        "summary": "Update profile",
        "description": "Partially updates profile fields by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileUpdateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "Updated profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "delete": {
        "operationId": "ProfileController_remove",
        "summary": "Delete profile",
        "description": "Deletes a profile by ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/profiles/{id}/document-sources": {
      "get": {
        "operationId": "ProfileController_listSources",
        "summary": "List profile document sources",
        "description": "Returns a paginated list of documents linked to the profile.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "Page size (default 50, up to 200)",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "Offset/start index (default 0)",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          },
          {
            "name": "topicId",
            "required": true,
            "in": "query",
            "description": "Topic ID (Required)",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List document sources assigned to profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSourcesListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "post": {
        "operationId": "ProfileController_assignSource",
        "summary": "Assign document to profile",
        "description": "Creates a profile-document link if it does not exist.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignDocumentSourceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assigned document source",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSourceDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/profiles/{id}/document-sources/{documentId}": {
      "delete": {
        "operationId": "ProfileController_unassignSource",
        "summary": "Unassign document from profile",
        "description": "Deletes the profile-document link.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "documentId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unassign result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/profiles/{id}/task": {
      "post": {
        "operationId": "ProfileController_assignTask",
        "summary": "Assign task to profile",
        "description": "Links an analysis task to the profile.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Assigned task result",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileTaskDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "get": {
        "operationId": "ProfileController_getTask",
        "summary": "Get profile task",
        "description": "Returns the identifier of the task assigned to the profile (or null).",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get assigned task for profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileTaskDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      },
      "delete": {
        "operationId": "ProfileController_unassignTask",
        "summary": "Unassign task from profile",
        "description": "Unlinks the previously assigned analysis task from the profile.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Unassign task from profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/profiles/{id}/run": {
      "post": {
        "operationId": "ProfileController_runAggregate",
        "summary": "Run aggregate analysis",
        "description": "Enqueues an aggregate analysis job for the profile.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Enqueue aggregate analysis job for profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileRunResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Profiles"
        ]
      }
    },
    "/api/reports": {
      "get": {
        "operationId": "ReportController_list",
        "summary": "List reports",
        "description": "Returns a paginated list of reports, optionally filtered by profileId, ordered by createdAt DESC.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          },
          {
            "name": "profileId",
            "required": false,
            "in": "query",
            "schema": {
              "maximum": 9007199254740991,
              "exclusiveMinimum": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsListResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      },
      "post": {
        "operationId": "ReportController_create",
        "summary": "Create report",
        "description": "Create a new report for a given analysis profile and payload.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportCreateDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/reports/{id}": {
      "get": {
        "operationId": "ReportController_getOne",
        "summary": "Get report by ID",
        "description": "Fetch a single report by its UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      },
      "patch": {
        "operationId": "ReportController_update",
        "summary": "Update report",
        "description": "Partially update report fields by UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportUpdateDto"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      },
      "delete": {
        "operationId": "ReportController_remove",
        "summary": "Delete report",
        "description": "Delete a report by UUID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Reports"
        ]
      }
    },
    "/api/tasks": {
      "get": {
        "operationId": "TasksController_list",
        "summary": "List tasks",
        "description": "Returns a paginated list of tasks ordered by id DESC.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TasksListResponseDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      },
      "post": {
        "operationId": "TasksController_create",
        "summary": "Create task",
        "description": "Create a new analysis task with name, optional description, and prompt.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreateDtoClass"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/tasks/{id}": {
      "get": {
        "operationId": "TasksController_getOne",
        "summary": "Get task by ID",
        "description": "Fetch a single task by its numeric ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      },
      "patch": {
        "operationId": "TasksController_update",
        "summary": "Update task",
        "description": "Partially update task fields by numeric ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdateDtoClass"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      },
      "delete": {
        "operationId": "TasksController_remove",
        "summary": "Delete task",
        "description": "Delete a task by numeric ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Tasks"
        ]
      }
    },
    "/api/topics": {
      "get": {
        "operationId": "TopicsController_list",
        "summary": "List topics",
        "description": "Returns a paginated list of topics ordered by id DESC. Includes parent relationship when present.",
        "parameters": [
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "maximum": 200,
              "default": 50,
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 0,
              "maximum": 9007199254740991,
              "default": 0,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicsListResponseDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Topics"
        ]
      },
      "post": {
        "operationId": "TopicsController_create",
        "summary": "Create topic",
        "description": "Create a new topic with optional description and parent reference.",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicCreateDtoClass"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Topics"
        ]
      }
    },
    "/api/topics/{id}": {
      "get": {
        "operationId": "TopicsController_getOne",
        "summary": "Get topic by ID",
        "description": "Fetch a single topic by its numeric ID. Includes parent info when available.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Topics"
        ]
      },
      "patch": {
        "operationId": "TopicsController_update",
        "summary": "Update topic",
        "description": "Partially update a topic by numeric ID. Supports changing name, description, and parent.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TopicUpdateDtoClass"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicDtoClass_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Topics"
        ]
      },
      "delete": {
        "operationId": "TopicsController_remove",
        "summary": "Delete topic",
        "description": "Delete a topic by numeric ID.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OkResponseDto_Output"
                }
              }
            }
          }
        },
        "tags": [
          "Topics"
        ]
      }
    }
  },
  "info": {
    "title": "Trade API",
    "description": "Auto-generated OpenAPI documentation for Trade backend",
    "version": "1.0.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "components": {
    "schemas": {
      "DocumentsListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                },
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "scraper": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "type": "string",
                          "const": "API"
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "url"
                          ],
                          "additionalProperties": false
                        },
                        "postProcessors": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "description": "Пост-обработчик TRIM_WHITESPACE",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Тип пост-обработчика: обрезка пробелов",
                                    "type": "string",
                                    "const": "TRIM_WHITESPACE"
                                  },
                                  "config": {
                                    "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                                    "type": "object",
                                    "properties": {
                                      "collapseMultipleSpaces": {
                                        "default": true,
                                        "type": "boolean"
                                      },
                                      "collapseNewlines": {
                                        "default": true,
                                        "type": "boolean"
                                      },
                                      "trimEachLine": {
                                        "default": true,
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "collapseMultipleSpaces",
                                      "collapseNewlines",
                                      "trimEachLine"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "type",
                                  "config"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "topicId": {
                          "anyOf": [
                            {
                              "type": "integer",
                              "exclusiveMinimum": 0,
                              "maximum": 9007199254740991
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "config",
                        "id"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "type": {
                          "type": "string",
                          "const": "HTML"
                        },
                        "config": {
                          "type": "object",
                          "properties": {
                            "url": {
                              "type": "string",
                              "format": "uri"
                            },
                            "selectors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "selector": {
                                    "type": "string"
                                  },
                                  "attr": {
                                    "type": "string"
                                  },
                                  "asHtml": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "name",
                                  "selector"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "headers": {
                              "type": "object",
                              "propertyNames": {
                                "type": "string"
                              },
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "timeoutMs": {
                              "type": "number",
                              "exclusiveMinimum": 0
                            },
                            "delayMs": {
                              "type": "integer",
                              "minimum": 0,
                              "maximum": 9007199254740991
                            },
                            "pagination": {
                              "type": "object",
                              "properties": {
                                "nextSelector": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "nextUrlTemplate": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "pageParam": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "startPage": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 9007199254740991
                                },
                                "maxPages": {
                                  "type": "integer",
                                  "exclusiveMinimum": 0,
                                  "maximum": 9007199254740991
                                }
                              },
                              "additionalProperties": false
                            },
                            "document": {
                              "type": "object",
                              "properties": {
                                "linkSelector": {
                                  "type": "string"
                                },
                                "linkAttr": {
                                  "type": "string"
                                },
                                "titleSelector": {
                                  "type": "string"
                                },
                                "contentSelector": {
                                  "type": "string"
                                },
                                "dateSelector": {
                                  "type": "string"
                                },
                                "dateAttr": {
                                  "type": "string"
                                },
                                "baseUrl": {
                                  "type": "string",
                                  "format": "uri"
                                },
                                "maxDocsPerPage": {
                                  "type": "integer",
                                  "exclusiveMinimum": 0,
                                  "maximum": 9007199254740991
                                }
                              },
                              "required": [
                                "linkSelector"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "url",
                            "selectors",
                            "headers",
                            "timeoutMs"
                          ],
                          "additionalProperties": false
                        },
                        "postProcessors": {
                          "type": "array",
                          "items": {
                            "anyOf": [
                              {
                                "description": "Пост-обработчик TRIM_WHITESPACE",
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "description": "Тип пост-обработчика: обрезка пробелов",
                                    "type": "string",
                                    "const": "TRIM_WHITESPACE"
                                  },
                                  "config": {
                                    "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                                    "type": "object",
                                    "properties": {
                                      "collapseMultipleSpaces": {
                                        "default": true,
                                        "type": "boolean"
                                      },
                                      "collapseNewlines": {
                                        "default": true,
                                        "type": "boolean"
                                      },
                                      "trimEachLine": {
                                        "default": true,
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "collapseMultipleSpaces",
                                      "collapseNewlines",
                                      "trimEachLine"
                                    ],
                                    "additionalProperties": false
                                  }
                                },
                                "required": [
                                  "type",
                                  "config"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          }
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                        },
                        "topicId": {
                          "anyOf": [
                            {
                              "type": "integer",
                              "exclusiveMinimum": 0,
                              "maximum": 9007199254740991
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      },
                      "required": [
                        "name",
                        "type",
                        "config",
                        "id"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "scrapedAt": {},
                "date": {},
                "meta": {
                  "type": "object",
                  "propertyNames": {
                    "type": "string"
                  },
                  "additionalProperties": {
                    "anyOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  }
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "MD",
                    "XML",
                    "JSON"
                  ]
                },
                "contentHash": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "title",
                "content",
                "scraper",
                "scrapedAt",
                "date",
                "meta",
                "type",
                "contentHash"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "DocumentDto_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "title": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "content": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "scraper": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "API"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "collapseMultipleSpaces",
                                "collapseNewlines",
                                "trimEachLine"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                  },
                  "topicId": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "HTML"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "selectors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "string"
                            },
                            "attr": {
                              "type": "string"
                            },
                            "asHtml": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "selector"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "headers": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "timeoutMs": {
                        "type": "number",
                        "exclusiveMinimum": 0
                      },
                      "delayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9007199254740991
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "nextSelector": {
                            "type": "string",
                            "minLength": 1
                          },
                          "nextUrlTemplate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "pageParam": {
                            "type": "string",
                            "minLength": 1
                          },
                          "startPage": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 9007199254740991
                          },
                          "maxPages": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "additionalProperties": false
                      },
                      "document": {
                        "type": "object",
                        "properties": {
                          "linkSelector": {
                            "type": "string"
                          },
                          "linkAttr": {
                            "type": "string"
                          },
                          "titleSelector": {
                            "type": "string"
                          },
                          "contentSelector": {
                            "type": "string"
                          },
                          "dateSelector": {
                            "type": "string"
                          },
                          "dateAttr": {
                            "type": "string"
                          },
                          "baseUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "maxDocsPerPage": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "required": [
                          "linkSelector"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "url",
                      "selectors",
                      "headers",
                      "timeoutMs"
                    ],
                    "additionalProperties": false
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "collapseMultipleSpaces",
                                "collapseNewlines",
                                "trimEachLine"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                  },
                  "topicId": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config",
                  "id"
                ],
                "additionalProperties": false
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "scrapedAt": {
            "type": "",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "date": {
            "type": "",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "meta": {
            "type": "object",
            "propertyNames": {
              "type": "string"
            },
            "additionalProperties": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "number"
                }
              ]
            },
            "x-nestjs_zod-has-null": true,
            "selfRequired": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "type": {
            "type": "string",
            "enum": [
              "MD",
              "XML",
              "JSON"
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "contentHash": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "title",
          "content",
          "scraper",
          "scrapedAt",
          "date",
          "meta",
          "type",
          "contentHash"
        ]
      },
      "DocumentCreateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          },
          "scraperId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
          },
          "content": {
            "type": "",
            "x-nestjs_zod-empty-type": true
          },
          "scrapedAt": {
            "type": "",
            "x-nestjs_zod-empty-type": true
          },
          "contentHash": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "scraperId",
          "content"
        ]
      },
      "DocumentUpdateDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "minLength": 1
          },
          "content": {
            "type": "",
            "x-nestjs_zod-empty-type": true
          },
          "scraperId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
          },
          "scrapedAt": {
            "type": "",
            "x-nestjs_zod-empty-type": true
          },
          "type": {
            "type": "string",
            "enum": [
              "MD",
              "XML",
              "JSON"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "OkResponseDto_Output": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "ok"
        ]
      },
      "ScrapersListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "type": "string",
                      "const": "API"
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false
                    },
                    "postProcessors": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "description": "Пост-обработчик TRIM_WHITESPACE",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Тип пост-обработчика: обрезка пробелов",
                                "type": "string",
                                "const": "TRIM_WHITESPACE"
                              },
                              "config": {
                                "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                                "type": "object",
                                "properties": {
                                  "collapseMultipleSpaces": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "collapseNewlines": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "trimEachLine": {
                                    "default": true,
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "collapseMultipleSpaces",
                                  "collapseNewlines",
                                  "trimEachLine"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                    },
                    "topicId": {
                      "anyOf": [
                        {
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "config",
                    "id"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "type": {
                      "type": "string",
                      "const": "HTML"
                    },
                    "config": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "selectors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "selector": {
                                "type": "string"
                              },
                              "attr": {
                                "type": "string"
                              },
                              "asHtml": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "name",
                              "selector"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "headers": {
                          "type": "object",
                          "propertyNames": {
                            "type": "string"
                          },
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "timeoutMs": {
                          "type": "number",
                          "exclusiveMinimum": 0
                        },
                        "delayMs": {
                          "type": "integer",
                          "minimum": 0,
                          "maximum": 9007199254740991
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "nextSelector": {
                              "type": "string",
                              "minLength": 1
                            },
                            "nextUrlTemplate": {
                              "type": "string",
                              "minLength": 1
                            },
                            "pageParam": {
                              "type": "string",
                              "minLength": 1
                            },
                            "startPage": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 9007199254740991
                            },
                            "maxPages": {
                              "type": "integer",
                              "exclusiveMinimum": 0,
                              "maximum": 9007199254740991
                            }
                          },
                          "additionalProperties": false
                        },
                        "document": {
                          "type": "object",
                          "properties": {
                            "linkSelector": {
                              "type": "string"
                            },
                            "linkAttr": {
                              "type": "string"
                            },
                            "titleSelector": {
                              "type": "string"
                            },
                            "contentSelector": {
                              "type": "string"
                            },
                            "dateSelector": {
                              "type": "string"
                            },
                            "dateAttr": {
                              "type": "string"
                            },
                            "baseUrl": {
                              "type": "string",
                              "format": "uri"
                            },
                            "maxDocsPerPage": {
                              "type": "integer",
                              "exclusiveMinimum": 0,
                              "maximum": 9007199254740991
                            }
                          },
                          "required": [
                            "linkSelector"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "required": [
                        "url",
                        "selectors",
                        "headers",
                        "timeoutMs"
                      ],
                      "additionalProperties": false
                    },
                    "postProcessors": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "description": "Пост-обработчик TRIM_WHITESPACE",
                            "type": "object",
                            "properties": {
                              "type": {
                                "description": "Тип пост-обработчика: обрезка пробелов",
                                "type": "string",
                                "const": "TRIM_WHITESPACE"
                              },
                              "config": {
                                "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                                "type": "object",
                                "properties": {
                                  "collapseMultipleSpaces": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "collapseNewlines": {
                                    "default": true,
                                    "type": "boolean"
                                  },
                                  "trimEachLine": {
                                    "default": true,
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "collapseMultipleSpaces",
                                  "collapseNewlines",
                                  "trimEachLine"
                                ],
                                "additionalProperties": false
                              }
                            },
                            "required": [
                              "type",
                              "config"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      }
                    },
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                    },
                    "topicId": {
                      "anyOf": [
                        {
                          "type": "integer",
                          "exclusiveMinimum": 0,
                          "maximum": 9007199254740991
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "type",
                    "config",
                    "id"
                  ],
                  "additionalProperties": false
                }
              ]
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "ScraperDto_Output": {
        "type": "object",
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "API"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "url"
                    ],
                    "additionalProperties": false
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "collapseMultipleSpaces",
                                "collapseNewlines",
                                "trimEachLine"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                  },
                  "topicId": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "HTML"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "selectors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "string"
                            },
                            "attr": {
                              "type": "string"
                            },
                            "asHtml": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "selector"
                          ],
                          "additionalProperties": false
                        }
                      },
                      "headers": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "timeoutMs": {
                        "type": "number",
                        "exclusiveMinimum": 0
                      },
                      "delayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9007199254740991
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "nextSelector": {
                            "type": "string",
                            "minLength": 1
                          },
                          "nextUrlTemplate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "pageParam": {
                            "type": "string",
                            "minLength": 1
                          },
                          "startPage": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 9007199254740991
                          },
                          "maxPages": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "additionalProperties": false
                      },
                      "document": {
                        "type": "object",
                        "properties": {
                          "linkSelector": {
                            "type": "string"
                          },
                          "linkAttr": {
                            "type": "string"
                          },
                          "titleSelector": {
                            "type": "string"
                          },
                          "contentSelector": {
                            "type": "string"
                          },
                          "dateSelector": {
                            "type": "string"
                          },
                          "dateAttr": {
                            "type": "string"
                          },
                          "baseUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "maxDocsPerPage": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "required": [
                          "linkSelector"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "url",
                      "selectors",
                      "headers",
                      "timeoutMs"
                    ],
                    "additionalProperties": false
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              },
                              "required": [
                                "collapseMultipleSpaces",
                                "collapseNewlines",
                                "trimEachLine"
                              ],
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ],
                          "additionalProperties": false
                        }
                      ]
                    }
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                  },
                  "topicId": {
                    "anyOf": [
                      {
                        "type": "integer",
                        "exclusiveMinimum": 0,
                        "maximum": 9007199254740991
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config",
                  "id"
                ],
                "additionalProperties": false
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "data"
        ]
      },
      "ScraperCreateDto": {
        "type": "object",
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "API"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "HTML"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "selectors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "string"
                            },
                            "attr": {
                              "type": "string"
                            },
                            "asHtml": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "selector"
                          ]
                        }
                      },
                      "headers": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "timeoutMs": {
                        "type": "number",
                        "exclusiveMinimum": 0
                      },
                      "delayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9007199254740991
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "nextSelector": {
                            "type": "string",
                            "minLength": 1
                          },
                          "nextUrlTemplate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "pageParam": {
                            "type": "string",
                            "minLength": 1
                          },
                          "startPage": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 9007199254740991
                          },
                          "maxPages": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        }
                      },
                      "document": {
                        "type": "object",
                        "properties": {
                          "linkSelector": {
                            "type": "string"
                          },
                          "linkAttr": {
                            "type": "string"
                          },
                          "titleSelector": {
                            "type": "string"
                          },
                          "contentSelector": {
                            "type": "string"
                          },
                          "dateSelector": {
                            "type": "string"
                          },
                          "dateAttr": {
                            "type": "string"
                          },
                          "baseUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "maxDocsPerPage": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "required": [
                          "linkSelector"
                        ]
                      }
                    },
                    "required": [
                      "url",
                      "selectors",
                      "headers",
                      "timeoutMs"
                    ]
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config"
                ]
              }
            ],
            "x-nestjs_zod-empty-type": true
          }
        },
        "required": [
          "data"
        ]
      },
      "ScraperUpdateDto": {
        "type": "object",
        "properties": {
          "data": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "API"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "type": {
                    "type": "string",
                    "const": "HTML"
                  },
                  "config": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string",
                        "format": "uri"
                      },
                      "selectors": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "selector": {
                              "type": "string"
                            },
                            "attr": {
                              "type": "string"
                            },
                            "asHtml": {
                              "type": "boolean"
                            }
                          },
                          "required": [
                            "name",
                            "selector"
                          ]
                        }
                      },
                      "headers": {
                        "type": "object",
                        "propertyNames": {
                          "type": "string"
                        },
                        "additionalProperties": {
                          "type": "string"
                        }
                      },
                      "timeoutMs": {
                        "type": "number",
                        "exclusiveMinimum": 0
                      },
                      "delayMs": {
                        "type": "integer",
                        "minimum": 0,
                        "maximum": 9007199254740991
                      },
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "nextSelector": {
                            "type": "string",
                            "minLength": 1
                          },
                          "nextUrlTemplate": {
                            "type": "string",
                            "minLength": 1
                          },
                          "pageParam": {
                            "type": "string",
                            "minLength": 1
                          },
                          "startPage": {
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 9007199254740991
                          },
                          "maxPages": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        }
                      },
                      "document": {
                        "type": "object",
                        "properties": {
                          "linkSelector": {
                            "type": "string"
                          },
                          "linkAttr": {
                            "type": "string"
                          },
                          "titleSelector": {
                            "type": "string"
                          },
                          "contentSelector": {
                            "type": "string"
                          },
                          "dateSelector": {
                            "type": "string"
                          },
                          "dateAttr": {
                            "type": "string"
                          },
                          "baseUrl": {
                            "type": "string",
                            "format": "uri"
                          },
                          "maxDocsPerPage": {
                            "type": "integer",
                            "exclusiveMinimum": 0,
                            "maximum": 9007199254740991
                          }
                        },
                        "required": [
                          "linkSelector"
                        ]
                      }
                    },
                    "required": [
                      "url",
                      "selectors",
                      "headers",
                      "timeoutMs"
                    ]
                  },
                  "postProcessors": {
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "description": "Пост-обработчик TRIM_WHITESPACE",
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "Тип пост-обработчика: обрезка пробелов",
                              "type": "string",
                              "const": "TRIM_WHITESPACE"
                            },
                            "config": {
                              "description": "Настройки пост-обработчика TRIM_WHITESPACE",
                              "type": "object",
                              "properties": {
                                "collapseMultipleSpaces": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "collapseNewlines": {
                                  "default": true,
                                  "type": "boolean"
                                },
                                "trimEachLine": {
                                  "default": true,
                                  "type": "boolean"
                                }
                              }
                            }
                          },
                          "required": [
                            "type",
                            "config"
                          ]
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "config"
                ]
              }
            ],
            "x-nestjs_zod-empty-type": true
          }
        },
        "required": [
          "data"
        ]
      },
      "ScraperRunResponseDto_Output": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "x-nestjs_zod-parent-additional-properties": false
          },
          "jobId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "number"
              }
            ],
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "ok"
        ]
      },
      "CollectionsListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                },
                "name": {
                  "type": "string"
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "filters": {
                  "anyOf": [
                    {},
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))$"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date",
                  "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))$"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "filters",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "CollectionDto_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "name": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "filters": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "createdAt": {
            "type": "string",
            "format": "date",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))$",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "updatedAt": {
            "type": "string",
            "format": "date",
            "pattern": "^(?:(?:\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\d|30)|(?:02)-(?:0[1-9]|1\\d|2[0-8])))$",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "filters",
          "createdAt",
          "updatedAt"
        ]
      },
      "Function": {
        "type": "object",
        "properties": {}
      },
      "AugmentedZodDto_Output": {
        "type": "object",
        "properties": {
          "root": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                },
                "title": {
                  "type": "string"
                },
                "content": {
                  "type": "string"
                },
                "scraperId": {
                  "type": "string"
                },
                "contentHash": {
                  "type": "string"
                },
                "scrapedAt": {}
              },
              "required": [
                "id",
                "title",
                "content",
                "scraperId",
                "contentHash",
                "scrapedAt"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-unwrap-root": true
          }
        }
      },
      "ProfilesListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Profiles list",
            "items": {
              "description": "Analysis profile",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Profile ID",
                  "type": "integer",
                  "exclusiveMinimum": 0,
                  "maximum": 9007199254740991
                },
                "name": {
                  "description": "Profile name",
                  "type": "string"
                },
                "description": {
                  "description": "Profile description (may be absent)",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "description": "Creation time (ISO 8601)",
                  "type": "string"
                },
                "updatedAt": {
                  "description": "Update time (ISO 8601)",
                  "type": "string"
                },
                "topicId": {
                  "description": "Related topic (if used)",
                  "anyOf": [
                    {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "description": "Total profiles count",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "description": "Page size",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "description": "Offset",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "ProfileDto_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Profile ID",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "name": {
            "type": "string",
            "description": "Profile name",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "description": {
            "description": "Profile description (may be absent)",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "createdAt": {
            "type": "string",
            "description": "Creation time (ISO 8601)",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "updatedAt": {
            "type": "string",
            "description": "Update time (ISO 8601)",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "topicId": {
            "description": "Related topic (if used)",
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "createdAt",
          "updatedAt"
        ]
      },
      "ProfileCreateDto": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Profile name",
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "topicId": {
            "description": "Topic ID",
            "type": "number",
            "minimum": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "description": "Profile description (optional)",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          }
        },
        "required": [
          "name",
          "topicId"
        ]
      },
      "ProfileUpdateDto": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Profile name",
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "description": "Profile description",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          }
        }
      },
      "DocumentSourcesListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "List of linked documents",
            "items": {
              "description": "Document linked to a profile",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Profile-document link identifier",
                  "type": "integer",
                  "exclusiveMinimum": 0,
                  "maximum": 9007199254740991
                },
                "documentId": {
                  "description": "Document UUID",
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                }
              },
              "required": [
                "id",
                "documentId"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "description": "Total links count",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "description": "Page size",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "description": "Offset",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "AssignDocumentSourceDto": {
        "type": "object",
        "properties": {
          "documentId": {
            "description": "UUID of the document to be linked to the profile",
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
          }
        },
        "required": [
          "documentId"
        ]
      },
      "DocumentSourceDto_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Profile-document link identifier",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "documentId": {
            "type": "string",
            "description": "Document UUID",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "documentId"
        ]
      },
      "AssignTaskDto": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "ID задачи анализа, которую нужно назначить профилю",
            "type": "integer",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991
          }
        },
        "required": [
          "taskId"
        ]
      },
      "ProfileTaskDto_Output": {
        "type": "object",
        "properties": {
          "taskId": {
            "description": "ID назначенной задачи или null, если не назначена",
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "taskId"
        ]
      },
      "ProfileRunResponseDto_Output": {
        "type": "object",
        "properties": {
          "ok": {
            "type": "boolean",
            "x-nestjs_zod-parent-additional-properties": false
          },
          "jobId": {
            "type": "string",
            "x-nestjs_zod-parent-additional-properties": false
          },
          "executionId": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "ok",
          "jobId",
          "executionId"
        ]
      },
      "ReportsListResponseDto_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$"
                },
                "profileId": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "content": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "llmModel": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {},
                "tokensIn": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740991
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "tokensOut": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "minimum": 0,
                      "maximum": 9007199254740991
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "cost": {
                  "anyOf": [
                    {
                      "type": "number",
                      "minimum": 0
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              },
              "required": [
                "id",
                "profileId",
                "type",
                "content",
                "llmModel",
                "createdAt",
                "tokensIn",
                "tokensOut",
                "cost"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "ReportDto_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "pattern": "^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "profileId": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "llmModel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "createdAt": {
            "type": "",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "tokensIn": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "tokensOut": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "cost": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "profileId",
          "type",
          "content",
          "llmModel",
          "createdAt",
          "tokensIn",
          "tokensOut",
          "cost"
        ]
      },
      "ReportCreateDto": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991
          },
          "type": {
            "type": "string",
            "enum": [
              "md",
              "article"
            ]
          },
          "content": {
            "type": "string"
          },
          "llmModel": {
            "type": "string"
          },
          "tokensIn": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          },
          "tokensOut": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          },
          "cost": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "profileId",
          "type",
          "content",
          "llmModel",
          "tokensIn",
          "tokensOut",
          "cost"
        ]
      },
      "ReportUpdateDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "md",
              "article"
            ]
          },
          "content": {
            "type": "string"
          },
          "llmModel": {
            "type": "string"
          },
          "tokensIn": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          },
          "tokensOut": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991
          },
          "cost": {
            "type": "number",
            "minimum": 0
          }
        },
        "required": [
          "type",
          "content",
          "llmModel",
          "tokensIn",
          "tokensOut",
          "cost"
        ]
      },
      "TasksListResponseDtoClass_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "description": "Задача анализа",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Идентификатор задачи",
                  "type": "integer",
                  "exclusiveMinimum": 0,
                  "maximum": 9007199254740991
                },
                "name": {
                  "description": "Название задачи",
                  "type": "string",
                  "minLength": 1
                },
                "description": {
                  "description": "Описание задачи (может отсутствовать)",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "prompt": {
                  "description": "Подсказка/шаблон запроса для ИИ",
                  "type": "string",
                  "minLength": 1
                },
                "createdAt": {
                  "description": "Время создания (ISO 8601)",
                  "type": "string"
                },
                "updatedAt": {
                  "description": "Время обновления (ISO 8601)",
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "prompt",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "TaskDtoClass_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Идентификатор задачи",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "name": {
            "type": "string",
            "description": "Название задачи",
            "minLength": 1,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "description": {
            "description": "Описание задачи (может отсутствовать)",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "prompt": {
            "type": "string",
            "description": "Подсказка/шаблон запроса для ИИ",
            "minLength": 1,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "createdAt": {
            "type": "string",
            "description": "Время создания (ISO 8601)",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "updatedAt": {
            "type": "string",
            "description": "Время обновления (ISO 8601)",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "prompt",
          "createdAt",
          "updatedAt"
        ]
      },
      "TaskCreateDtoClass": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Название задачи",
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "description": "Описание задачи (необязательно)",
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "prompt": {
            "description": "Подсказка/шаблон запроса для ИИ",
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          }
        },
        "required": [
          "name",
          "prompt"
        ]
      },
      "TaskUpdateDtoClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "prompt": {
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          }
        }
      },
      "TopicsListResponseDtoClass_Output": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "exclusiveMinimum": 0,
                  "maximum": 9007199254740991
                },
                "name": {
                  "type": "string",
                  "minLength": 1
                },
                "description": {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "parentId": {
                  "anyOf": [
                    {
                      "type": "integer",
                      "exclusiveMinimum": 0,
                      "maximum": 9007199254740991
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name",
                "description",
                "parentId",
                "createdAt",
                "updatedAt"
              ],
              "additionalProperties": false
            },
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "total": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "items",
          "total",
          "limit",
          "offset"
        ]
      },
      "TopicDtoClass_Output": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "exclusiveMinimum": 0,
            "maximum": 9007199254740991,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "name": {
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "parentId": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "createdAt": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          },
          "updatedAt": {
            "type": "string",
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-parent-additional-properties": false
          }
        },
        "required": [
          "id",
          "name",
          "description",
          "parentId",
          "createdAt",
          "updatedAt"
        ]
      },
      "TopicCreateDtoClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "parentId": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          }
        },
        "required": [
          "name"
        ]
      },
      "TopicUpdateDtoClass": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 1,
            "x-nestjs_zod-has-null": true
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          },
          "parentId": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0,
                "maximum": 9007199254740991
              },
              {
                "type": "null"
              }
            ],
            "x-nestjs_zod-has-null": true,
            "x-nestjs_zod-empty-type": true
          }
        }
      }
    }
  }
}